2.1运行时数据区域：
1、程序计数器：所占空间很小几乎可以忽略不计
2、java虚拟机栈：线程私有，生命周期和线程相同。
java虚拟机描述的是java方法执行的内存模型；每个方法在执行的同事都会创建一个栈帧用于存储局部变量表、操作数栈、动态链接、方法出口等信息。
其中规定如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常；如果虚拟机栈可以动态扩展
如果扩展是无法申请到足够的内存，就会抛出OutOfMemoryError异常
3、本地方法栈：与虚拟机所发挥的作用非常相似，他们之间的区别不过是虚拟机为虚拟机执行java方法服务，二本地方法栈则为虚拟机使用到的native方法服务
4、java堆：是java虚拟机所管理的内存中最大的一块。java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此区域的唯一目的解释存放对象实例
几乎所有的对象实例都在这里分配内存。
5方法区：与java堆一样是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器后的代码等数据。
常量池：是方法区的一部分 存放编译期生成的各种字面量和符号引用。
**直接内存：不属于数据区域 
2.2对象的内存布局：对象头、实例数据和对齐填充
